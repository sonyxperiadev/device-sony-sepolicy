type tad, domain;
type tad_exec, exec_type, vendor_file_type, file_type;

init_daemon_domain(tad)

allow tad block_device:dir { getattr search };
allow tad ta_block_device:blk_file rw_file_perms;

# Read access to pseudo filesystems.
r_dir_file(tad, proc)

###################
### tftp_server ###
###################

#The files created by tftp_server process in the /data folder will have type rfs_file
type_transition tad system_data_file:{ dir file } rfs_file;
type_transition tad system_data_file:dir rfs_shared_hlos_file "hlos_rfs";

#The files created by tftp_server process in the /persist folder will have type persist_rfs_file
type_transition tad persist_rfs_file:{ dir file } persist_rfs_file;
type_transition tad persist_rfs_file:dir persist_rfs_file "hlos_rfs";

#For QMI sockets and IPCR Sockets
allow tad self:socket create_socket_perms_no_ioctl;

#For Wakelocks
wakelock_use(tad)

#To create the folders in /persist
allow tad persist_file:dir create_dir_perms;

#For system folder entries
r_dir_file(tad, rfs_system_file)
allow tad rfs_system_file:lnk_file r_file_perms;

#For data folder entries
allow tad rfs_file:dir create_dir_perms;
allow tad rfs_file:file create_file_perms;

allow tad rfs_shared_hlos_file:dir create_dir_perms;
allow tad rfs_shared_hlos_file:file create_file_perms;

allow tad persist_rfs_file:dir create_dir_perms;
allow tad persist_rfs_file:file create_file_perms;

allow tad proc_cmdline:file r_file_perms;

#For firmware entries in /firmware to read NHLOS.bin files ( only perms to read and get attributes).
r_dir_file(tad, firmware_file)

#For dropping permisions from root and wakelock
allow tad self:capability {
    setuid
    setgid
    setpcap
    net_bind_service
};

#For access to the kmsg device
allow tad kmsg_device:chr_file w_file_perms;

#Prevent other domains from accessing RFS data files.
neverallow { domain -tad -kernel -recovery -init -vendor_init userdebug_or_eng(`-su') } rfs_file:dir create_dir_perms;
neverallow { domain -tad -kernel -recovery -init -vendor_init userdebug_or_eng(`-su') } rfs_file:file create_file_perms;
